운영 SETTING * WINDOWS 기준 -- 팀과제 / 개인과제 모두 루트계정 하위에 IAM 계정을 제공한다고 합니다. 따라서 IAM 계정이 생성되었다고 가정하고 그 이후의 상황을 정리합니다.
로컬 윈도우에 우분투설치 (Microsoft 스토어에 윈도우용 우분투 설치)
<참고 - 우분투 패키지 관리 툴> http://taewan.kim/tip/apt-apt-get/

우분투에 mvn 설치 (환경변수 세팅은 msaschool 참고)
sudo apt-get install maven

우분투에 Kubectl 설치
<참고 - 공식문서> https://kubernetes.io/ko/docs/tasks/tools/install-kubectl-linux/

우분투에 AWS CLI 설치
<참고 - 공식문서> https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/install-cliv2-linux.html

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"

-- UNZIP을 위해서는 위 1번에서 UNZIP 관련 PACKAGE 설치가 되어있어야 함. sudo apt install unzip

unzip awscliv2.zip

sudo ./aws/install

설치 후에 aws --version 로 설치여부 확인

------------------------------------------↑↑↑↑↑↑ 여기까지 로컬세팅 ↑↑↑↑↑↑ -------------------------------------------------
<우분투에서 작업시작> 

1. AWS CONFIGURE 를 위한 사전작업 () 

<참고> https://blog.naver.com/isc0304/222325840683 https://blog.naver.com/kgg1959/222193376777
액세스키 획득을 위해서는 IAM 계정으로 감 -- IAM 계정 생성 방법 <참고> https://blog.naver.com/dsz08082/222387462598

사용자에서 본인 ID 선택 --> 보안 자격 증명

액세스 키 만들고 메모장에 따로 저장 EX. 실행예시

2. Cloud Configuration

vbaorov@LAPTOP-MFPRU95A:~$ aws configure 

--------↓ 입력예시 ↓---------- 
AWS Access Key ID [None]: AKIAZPKSFUUGGTEQYQVM 
AWS Secret Access Key [None]: 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 
Default region name [None]: ap-northeast-2 
Default output format [None]: json

3. EKS 


3. eksctl 명령어로 클러스터 생성 (시간 좀 걸림)
eksctl create cluster --name (vbaorov-eks) --version (1.18) --nodegroup-name standard-workers --node-type t3.medium --nodes 2 --nodes-min 1 --nodes-max 2

4. AWS 클러스터 토큰 가져오기
aws eks --region (ap-northeast-2) update-kubeconfig --name (vbaorov-eks)
kubectl get all
kubectl config current-context

5. AWS ECR 생성 

AWS 페이지에서 상단 검색에 ECR 검색 --> 레지스트리 선택 --> 좌측메뉴에서 Amazon ECR 하위 Repositories 선택 --> 우상단 레포지토리 생성 클릭 
--> 일반 설정 - 표시 여부 설정 - "프라이빗"  --> 레포지토리 이름은 vbaorov-gateway 로 생성 

6. AWS ECR 로그인

aws ecr get-login-password --region (Region-Code) | docker login --username AWS --password-stdin (Account-Id).dkr.ecr.(Region-Code).amazonaws.com

EX. aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 651396752652.dkr.ecr.ap-northeast-2.amazonaws.com

<정상일때> 
WARNING! Your password will be stored unencrypted in /home/vbaorov/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded

<오류일때>
오류(unknown flag: --password-stdin) 발생 시,
docker login --username AWS -p $(aws ecr get-login-password --region (Region-Code)) (Account-Id).dkr.ecr.(Region-Code).amazonaws.com/

7. EKS 모니터링을 위한 Metric-Server 설치

kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.7/components.yaml

<정상일때> 
clusterrole.rbac.authorization.k8s.io/system:aggregated-metrics-reader created
clusterrolebinding.rbac.authorization.k8s.io/metrics-server:system:auth-delegator created
rolebinding.rbac.authorization.k8s.io/metrics-server-auth-reader created
apiservice.apiregistration.k8s.io/v1beta1.metrics.k8s.io created
serviceaccount/metrics-server created
deployment.apps/metrics-server created
service/metrics-server created
clusterrole.rbac.authorization.k8s.io/system:metrics-server created
clusterrolebinding.rbac.authorization.k8s.io/system:metrics-server created

<확인> kubectl get node

NAME                                                STATUS   ROLES    AGE   VERSION
ip-192-168-58-44.ap-northeast-2.compute.internal    Ready    <none>   31h   v1.18.20-eks-c9f1ce
ip-192-168-73-119.ap-northeast-2.compute.internal   Ready    <none>   31h   v1.18.20-eks-c9f1ce

<확인> kubectl top node

NAME                                                CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%
ip-192-168-58-44.ap-northeast-2.compute.internal    43m          2%     492Mi           14%
ip-192-168-73-119.ap-northeast-2.compute.internal   54m          2%     517Mi           15%


7. Metric-Server 설치 (파이널 평가때 반드시 해야함) 

kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.7/components.yaml


5. EKS 설치

curl --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp sudo mv /tmp/eksctl /usr/local/bin 설치 확인 eksctl version


Kubectl Context 설정
aws eks update-kubeconfig --name (클러스터명)

ECR 리포지토리 생성 <참고> https://blog.naver.com/sssang97/222459232906

도커 클라이언트 AWS 인증

생성된 ECR 리포지토리로 들어가 우상단 푸시 명령 보기를 통해 복붙 aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 651396752652.dkr.ecr.ap-northeast-2.amazonaws.com

Login Succeeded 뜨면 성공

도커 이미지를 처음 생성할 때 <참고> https://docs.aws.amazon.com/ko_kr/AmazonECS/latest/developerguide/docker-basics.html
인스턴스 생성 필요 - 인스턴스 연결 - .... 계속 진행

docker build -t vbaorov-test .
